{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/byeonseongjin/project/ocr_app/repo/ocr_japanese/ExpoFuku2/App.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions';\nexport default function App() {\n  var askForPermission = function askForPermission() {\n    var permissionResult;\n    return _regeneratorRuntime.async(function askForPermission$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n          case 2:\n            permissionResult = _context.sent;\n\n            if (!(permissionResult.status !== 'granted')) {\n              _context.next = 6;\n              break;\n            }\n\n            Alert.alert('no permissions to access camera!', [{\n              text: 'ok'\n            }]);\n            return _context.abrupt(\"return\", false);\n\n          case 6:\n            return _context.abrupt(\"return\", true);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  takeImage = function takeImage() {\n    var hasPermission, image;\n    return _regeneratorRuntime.async(function takeImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(askForPermission());\n\n          case 2:\n            hasPermission = _context2.sent;\n\n            if (hasPermission) {\n              _context2.next = 7;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 7:\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [3, 3],\n              quality: 1,\n              base64: true\n            }));\n\n          case 9:\n            image = _context2.sent;\n\n            if (!image.cancelled) {\n              fetch('http://52.185.172.211:5000/', {\n                method: 'POST',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  imgsource: image.base64\n                })\n              });\n            }\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }\n  }, React.createElement(Button, {\n    title: \"Take a photo\",\n    onPress: takeImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/byeonseongjin/project/ocr_app/repo/ocr_japanese/ExpoFuku2/App.js"],"names":["React","ImagePicker","Permissions","App","askForPermission","askAsync","CAMERA","permissionResult","status","Alert","alert","text","takeImage","hasPermission","launchCameraAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","base64","image","cancelled","fetch","method","headers","Accept","body","JSON","stringify","imgsource","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAEA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;AAEA,eAAe,SAASC,GAAT,GAAe;AAC7B,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACOF,WAAW,CAACG,QAAZ,CAAqBH,WAAW,CAACI,MAAjC,CADP;;AAAA;AAClBC,YAAAA,gBADkB;;AAAA,kBAEpBA,gBAAgB,CAACC,MAAjB,KAA4B,SAFR;AAAA;AAAA;AAAA;;AAGvBC,YAAAA,KAAK,CAACC,KAAN,CAAY,kCAAZ,EAAgD,CAAC;AAAEC,cAAAA,IAAI,EAAE;AAAR,aAAD,CAAhD;AAHuB,6CAIhB,KAJgB;;AAAA;AAAA,6CAMjB,IANiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AASAC,EAAAA,SAAS,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEiBR,gBAAgB,EAFjC;;AAAA;AAELS,YAAAA,aAFK;;AAAA,gBAGNA,aAHM;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,6CAOQZ,WAAW,CAACa,iBAAZ,CAA8B;AAC/CC,cAAAA,UAAU,EAAEd,WAAW,CAACe,gBAAZ,CAA6BC,MADM;AAE/CC,cAAAA,aAAa,EAAE,IAFgC;AAG/CC,cAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAHuC;AAI/CC,cAAAA,OAAO,EAAE,CAJsC;AAK/CC,cAAAA,MAAM,EAAE;AALuC,aAA9B,CAPR;;AAAA;AAONC,YAAAA,KAPM;;AAeV,gBAAI,CAACA,KAAK,CAACC,SAAX,EAAsB;AACrBC,cAAAA,KAAK,CAAC,6BAAD,EAAgC;AACpCC,gBAAAA,MAAM,EAAE,MAD4B;AAEpCC,gBAAAA,OAAO,EAAE;AACRC,kBAAAA,MAAM,EAAE,kBADA;AAER,kCAAgB;AAFR,iBAF2B;AAOpCC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACpBC,kBAAAA,SAAS,EAAET,KAAK,CAACD;AADG,iBAAf;AAP8B,eAAhC,CAAL;AAWA;;AA3BS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAZ;;AA8BA,SACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEW,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,cAAd;AAA6B,IAAA,OAAO,EAAErB,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD;AAKA;AAED,IAAMoB,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAChCF,EAAAA,SAAS,EAAE;AACVG,IAAAA,IAAI,EAAE,CADI;AAEVC,IAAAA,eAAe,EAAE,MAFP;AAGVC,IAAAA,UAAU,EAAE,QAHF;AAIVC,IAAAA,cAAc,EAAE;AAJN;AADqB,CAAlB,CAAf","sourcesContent":["import React from 'react'\nimport { StyleSheet, Text, View, Image, Button, Alert } from 'react-native'\nimport * as ImagePicker from 'expo-image-picker'\nimport * as Permissions from 'expo-permissions'\n\nexport default function App() {\n\tconst askForPermission = async () => {\n\t\tconst permissionResult = await Permissions.askAsync(Permissions.CAMERA)\n\t\tif (permissionResult.status !== 'granted') {\n\t\t\tAlert.alert('no permissions to access camera!', [{ text: 'ok' }])\n\t\t\treturn false\n\t\t}\n\t\treturn true\n\t}\n\n\ttakeImage = async () => {\n\t\t// make sure that we have the permission\n\t\tconst hasPermission = await askForPermission()\n\t\tif (!hasPermission) {\n\t\t\treturn\n\t\t} else {\n\t\t\t// launch the camera with the following settings\n\t\t\tlet image = await ImagePicker.launchCameraAsync({\n\t\t\t\tmediaTypes: ImagePicker.MediaTypeOptions.Images,\n\t\t\t\tallowsEditing: true,\n\t\t\t\taspect: [3, 3],\n\t\t\t\tquality: 1,\n\t\t\t\tbase64: true,\n\t\t\t})\n\t\t\t// make sure a image was taken:\n\t\t\tif (!image.cancelled) {\n\t\t\t\tfetch('http://52.185.172.211:5000/', {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\t// send our base64 string as POST request\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\timgsource: image.base64,\n\t\t\t\t\t}),\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<Button title=\"Take a photo\" onPress={takeImage} />\n\t\t</View>\n\t)\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: '#fff',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n})"]},"metadata":{},"sourceType":"module"}