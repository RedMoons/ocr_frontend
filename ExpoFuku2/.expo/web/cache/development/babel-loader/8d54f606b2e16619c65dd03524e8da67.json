{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/byeonseongjin/project/ocr_app/repo/ocr_japanese/ExpoFuku2/App.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Popup from 'react-native-popup';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions';\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isHide = _useState2[0],\n      setIsHide = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isFuku = _useState4[0],\n      setIsFuku = _useState4[1];\n\n  var askForPermission = function askForPermission() {\n    var permissionResult;\n    return _regeneratorRuntime.async(function askForPermission$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n          case 2:\n            permissionResult = _context.sent;\n\n            if (!(permissionResult.status !== 'granted')) {\n              _context.next = 6;\n              break;\n            }\n\n            alert('no permissions to access camera!', [{\n              text: 'ok'\n            }]);\n            return _context.abrupt(\"return\", false);\n\n          case 6:\n            return _context.abrupt(\"return\", true);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  takeImage = function takeImage() {\n    var hasPermission, image, response, result, parsed;\n    return _regeneratorRuntime.async(function takeImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setIsHide(false);\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(askForPermission());\n\n          case 3:\n            hasPermission = _context2.sent;\n\n            if (hasPermission) {\n              _context2.next = 8;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 8:\n            _context2.next = 10;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [3, 3],\n              quality: 1,\n              base64: true\n            }));\n\n          case 10:\n            image = _context2.sent;\n\n            if (image.cancelled) {\n              _context2.next = 21;\n              break;\n            }\n\n            _context2.next = 14;\n            return _regeneratorRuntime.awrap(fetch('http://52.185.172.211:5000/', {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                imgsource: image.base64\n              })\n            }));\n\n          case 14:\n            response = _context2.sent;\n            _context2.next = 17;\n            return _regeneratorRuntime.awrap(response.text());\n\n          case 17:\n            result = _context2.sent;\n            parsed = result.replace(/[\\n]+/g, '');\n            console.log(parsed);\n\n            if (parsed == \"True\") {\n              console.log(\">>> true condition\");\n              alert('There is Fukushima(福島)!!', [{\n                text: 'Ok'\n              }]);\n              setIsFuku(true);\n            } else {\n              console.log(\">>> false condition\");\n              setIsHide(false);\n\n              _this.popup.tip({\n                title: 'TipTip',\n                content: 'come on!'\n              });\n            }\n\n          case 21:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 3\n    }\n  }, React.createElement(Button, {\n    title: \"Take a photo\",\n    onPress: takeImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/byeonseongjin/project/ocr_app/repo/ocr_japanese/ExpoFuku2/App.js"],"names":["React","useState","Popup","ImagePicker","Permissions","App","isHide","setIsHide","isFuku","setIsFuku","askForPermission","askAsync","CAMERA","permissionResult","status","alert","text","takeImage","hasPermission","launchCameraAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","base64","image","cancelled","fetch","method","headers","Accept","body","JSON","stringify","imgsource","response","result","parsed","replace","console","log","popup","tip","title","content","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { StyleSheet, Text, View, Image, Button, Alert } from 'react-native'\nimport Popup from 'react-native-popup'\nimport * as ImagePicker from 'expo-image-picker'\nimport * as Permissions from 'expo-permissions'\n\nexport default function App() {\n  const [isHide, setIsHide] = useState(true);\n  const [isFuku, setIsFuku] = useState(false);\n\n\tconst askForPermission = async () => {\n\t\tconst permissionResult = await Permissions.askAsync(Permissions.CAMERA)\n\t\tif (permissionResult.status !== 'granted') {\n\t\t\talert('no permissions to access camera!', [{ text: 'ok' }])\n\t\t\treturn false\n\t\t}\n\t\treturn true\n  }\n\n\n\ttakeImage = async () => {\n    setIsHide(false)\n\t\t// make sure that we have the permission\n\t\tconst hasPermission = await askForPermission()\n\t\tif (!hasPermission) {\n\t\t\treturn\n\t\t} else {\n\t\t\t// launch the camera with the following settings\n\t\t\tlet image = await ImagePicker.launchCameraAsync({\n\t\t\t\tmediaTypes: ImagePicker.MediaTypeOptions.Images,\n\t\t\t\tallowsEditing: true,\n\t\t\t\taspect: [3, 3],\n\t\t\t\tquality: 1,\n\t\t\t\tbase64: true,\n\t\t\t})\n\t\t\t// make sure a image was taken:\n\t\t\tif (!image.cancelled) {\n\t\t\t\tconst response = await fetch('http://52.185.172.211:5000/', {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\t// send our base64 string as POST request\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\timgsource: image.base64,\n\t\t\t\t\t}),\n        })\n        const result = await response.text()\n        const parsed = result.replace(/[\\n]+/g, '');\n        console.log(parsed)\n\n        if (parsed == \"True\") {\n          console.log(\">>> true condition\")\n          alert('There is Fukushima(福島)!!', [{ text: 'Ok' }]);\n          setIsFuku(true)\n\n        }else {\n          console.log(\">>> false condition\")\n          // alert('There is no Fukushima(福島)!!', [{ text: 'Ok' }]);\n          setIsHide(false)\n          \n          this.popup.tip({\n            title: 'TipTip',\n            content: 'come on!',\n          });\n        }\n\t\t\t}\n\t\t}\n\t}\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<Button title=\"Take a photo\" onPress={takeImage} />\n\t\t</View>\n\t)\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: '#fff',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n})"]},"metadata":{},"sourceType":"module"}